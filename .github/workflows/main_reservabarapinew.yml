# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python app to Azure Web App - reservabarapiNEW

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install dependencies
        run: pip install -r requirements.txt
        
      # Optional: Add step to run tests here (PyTest, Django test suites, etc.)

      - name: Zip artifact for deployment
        # Asegura que el contenido del directorio actual (donde están main.py y requirements.txt)
        # se zipee directamente en la raíz del archivo release.zip, excluyendo el venv.
        run: zip -r release.zip . -x "*venv/*"

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: release.zip # Solo subimos el archivo zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Unzip artifact for deployment
        # Esto extrae el contenido del 'release.zip' en el directorio de trabajo actual del runner
        run: unzip release.zip

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_2A2C28535A4441EB96D7164C8707C566 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_6E8E4B0C55D54EB588ED278E529E76CF }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_340C016B265B496AB09D21B04C2BD145 }}

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'reservabarapiNEW'
          slot-name: 'Production'
          # *****************************************************************
          # ** CAMBIOS CLAVE AQUÍ: **
          # 'package: '.' le dice a la acción que el contenido a desplegar
          # es el directorio de trabajo actual (donde se descomprimió el zip).
          package: '.'
          # 'app-location: '/' le dice a Oryx (el sistema de compilación de Azure)
          # que la raíz de tu aplicación Python (donde está main.py y requirements.txt)
          # está en la raíz de lo que se desplegó.
          # Si tu main.py está en una subcarpeta (ej. 'backend/main.py' dentro del zip),
          # esto DEBE ser '/backend'.
          app-location: '/'
          # *****************************************************************
